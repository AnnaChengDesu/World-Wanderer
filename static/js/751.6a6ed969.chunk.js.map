{"version":3,"file":"static/js/751.6a6ed969.chunk.js","mappings":"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","sources":["constants/regionList.js","webpack://whereintheworld/./src/pages/Home/components/CountryCard/CountryCard.module.scss?3045","pages/Home/components/CountryCard/CountryCard.jsx","hooks/useInfiniteLoader.js","hooks/useInView.js","pages/Home/Home.jsx","pages/components/Skeleton/HomeCountryCards.jsx","pages/components/Skeleton/CountryDetail.jsx","pages/components/Skeleton/index.js","webpack://whereintheworld/./src/pages/CountryDetail/CountryDetail.module.scss?9998","webpack://whereintheworld/./src/pages/Home/Home.module.scss?ce6f"],"sourcesContent":["const regionList = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\nexport default regionList;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CountryCard_root__VDbNH\",\"flag\":\"CountryCard_flag__ROO4g\",\"content\":\"CountryCard_content__JtpHB\",\"title\":\"CountryCard_title__sV85F\",\"details\":\"CountryCard_details__7H+by\"};","import styles from \"./CountryCard.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { string } from \"prop-types\";\n\nfunction CountryCard({ alpha3Code, capital, flag, name, population, region }) {\n  const details = [\n    {\n      label: \"Population\",\n      value: population,\n    },\n    {\n      label: \"Region\",\n      value: region,\n    },\n    {\n      label: \"Capital\",\n      value: capital,\n    },\n  ];\n  return (\n    <Link to={`/country/${alpha3Code}`} className={styles.root}>\n      <div className={styles.flag}>\n        <img src={flag} alt={`country flag of ${name}`} loading=\"lazy\" />\n      </div>\n      <div className={styles.content}>\n        <h3 className={styles.title}>{name}</h3>\n        <ul className={styles.details}>\n          {details.map(({ label, value }) => (\n            <li key={label}>\n              <b>{label}</b>\n              {value}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Link>\n  );\n}\n\nCountryCard.propTypes = {\n  alpha3Code: string.isRequired,\n  capital: string.isRequired,\n  flag: string.isRequired,\n  name: string.isRequired,\n  population: string.isRequired,\n  region: string.isRequired,\n};\n\nexport default CountryCard;\n","import { useCallback, useState } from \"react\";\nimport useInView from \"./useInView\";\n\nconst INITIAL_PAGE = 1;\nconst INITIAL_PAGE_SIZE = 8;\n\nexport default function useInfiniteLoader(items) {\n  const [page, setPage] = useState(INITIAL_PAGE);\n\n  const totalPages = Math.ceil(items.length / INITIAL_PAGE_SIZE);\n\n  const onLoadMore = useCallback(\n    () => setPage((prevPage) => Math.min(totalPages, prevPage + 1)),\n    [totalPages]\n  );\n\n  const { observeRef } = useInView(onLoadMore);\n\n  return {\n    items: items.slice(0, page * INITIAL_PAGE_SIZE),\n    loadMoreRef: observeRef,\n    hasMoreItems: page < totalPages,\n  };\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function useInView(callback) {\n  const observeRef = useRef(null);\n\n  useEffect(() => {\n    if (!observeRef.current) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry && entry.isIntersecting) {\n          callback();\n        }\n      },\n      { root: null, rootMargin: \"25px\", threshold: 0 }\n    );\n\n    observer.observe(observeRef.current);\n    return () => observer.disconnect();\n  }, [callback]);\n\n  return { observeRef };\n}\n","import { useEffect, useState } from \"react\";\n\nimport {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport styles from \"./Home.module.scss\";\nimport REGION_LIST from \"constants/regionList\";\nimport CountryCard from \"./components/CountryCard/CountryCard\";\nimport Skeleton from \"../components/Skeleton\";\nimport { useGetAllCountriesQuery } from \"reduxModules/country/countryApi\";\nimport useInfiniteLoader from \"hooks/useInfiniteLoader\";\n\nfunction Home() {\n  const { data = [], isLoading } = useGetAllCountriesQuery();\n  const [listData, setListData] = useState([]);\n  const [filter, setFilter] = useState({\n    name: \"\",\n    region: \"\",\n  });\n\n  const { items, hasMoreItems, loadMoreRef } = useInfiniteLoader(listData);\n\n  useEffect(() => {\n    if (data.length === 0) return;\n    const filteredListData = data\n      .filter(\n        (country) =>\n          filter.region === \"\" || country.region.includes(filter.region)\n      )\n      .filter(\n        (country) =>\n          filter.name === \"\" ||\n          country.name.toLowerCase().includes(filter.name.toLowerCase())\n      );\n\n    setListData(filteredListData);\n  }, [data, filter.name, filter.region]);\n\n  const onChangeFilter = (key) => (event) => {\n    const value = event.target.value;\n    setFilter((state) => ({\n      ...state,\n      [key]: value,\n    }));\n  };\n\n  const clearSearch = () =>\n    setFilter((state) => ({\n      ...state,\n      name: \"\",\n    }));\n\n  const onMouseDownClearSearch = (event) => event.preventDefault();\n\n  const renderCountryCards = () => {\n    if (isLoading) return <Skeleton.HomeCountryCards />;\n\n    if (items.length === 0) {\n      return (\n        <div>\n          Sorry, we couldn't find a match country for \"{filter.name}\" in &#8203;\n          {filter.region || \"the world\"}.\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.cards}>\n        {items.map((country) => (\n          <CountryCard key={country.alpha3Code} {...country}></CountryCard>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={styles.toolbar}>\n        <FormControl fullWidth className={styles.search}>\n          <OutlinedInput\n            type=\"search\"\n            value={filter.name}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            }\n            endAdornment={\n              <InputAdornment className={styles.searchClear} position=\"end\">\n                <IconButton\n                  onClick={clearSearch}\n                  onMouseDown={onMouseDownClearSearch}\n                ></IconButton>\n              </InputAdornment>\n            }\n            placeholder=\"Search for a country...\"\n            onChange={onChangeFilter(\"name\")}\n          />\n        </FormControl>\n        <FormControl fullWidth className={styles.filter}>\n          <InputLabel id=\"filter-region-label\">Filter by region</InputLabel>\n          <Select\n            labelId=\"filter-region-label\"\n            label=\"Filter by region\"\n            value={filter.region}\n            onChange={onChangeFilter(\"region\")}\n          >\n            <MenuItem value=\"\">All</MenuItem>\n            {REGION_LIST.map((region) => (\n              <MenuItem key={region} value={region}>\n                {region}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      {renderCountryCards()}\n      {hasMoreItems && (\n        <div ref={loadMoreRef} className={styles.loadMore}></div>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n","import Skeleton from \"@mui/material/Skeleton\";\nimport styles from \"pages/Home/Home.module.scss\";\n\nfunction HomeCountryCards() {\n  return (\n    <div className={styles.cards}>\n      {[...Array(8).keys()].map((item) => (\n        <Skeleton key={item} variant=\"rectangular\" width={265} height={340} />\n      ))}\n    </div>\n  );\n}\n\nexport default HomeCountryCards;\n","import Skeleton from \"@mui/material/Skeleton\";\nimport styles from \"pages/CountryDetail/CountryDetail.module.scss\";\n\nfunction CountryDetail() {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.content}>\n        <Skeleton\n          className={styles.flag}\n          variant=\"rectangular\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n      <div className={styles.content}>\n        <Skeleton\n          variant=\"text\"\n          width={125}\n          height={32}\n          style={{ marginBottom: 20 }}\n        />\n        <Skeleton\n          variant=\"rectangular\"\n          height={145}\n          style={{ marginBottom: 60 }}\n        />\n        <Skeleton variant=\"rectangular\" height={36} />\n      </div>\n    </div>\n  );\n}\n\nexport default CountryDetail;\n","import HomeCountryCards from \"./HomeCountryCards\";\nimport CountryDetail from \"./CountryDetail\";\n\nconst Skeleton = {\n  HomeCountryCards,\n  CountryDetail,\n};\n\nexport default Skeleton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CountryDetail_root__42BKz\",\"navigateBack\":\"CountryDetail_navigateBack__qusY7\",\"wrapper\":\"CountryDetail_wrapper__caFa1\",\"flag\":\"CountryDetail_flag__esZk-\",\"flagImage\":\"CountryDetail_flagImage__myfQQ\",\"content\":\"CountryDetail_content__UXF3P\",\"title\":\"CountryDetail_title__6TXDb\",\"details\":\"CountryDetail_details__sQM1W\",\"group\":\"CountryDetail_group__xfK2S\",\"borders\":\"CountryDetail_borders__lJHqk\",\"borderList\":\"CountryDetail_borderList__vr4gt\",\"borderListItem\":\"CountryDetail_borderListItem__78bXZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"toolbar\":\"Home_toolbar__4nT4M\",\"search\":\"Home_search__FUu1d\",\"searchClear\":\"Home_searchClear__CVmL7\",\"filter\":\"Home_filter__+bTsy\",\"cards\":\"Home_cards__7nfX+\",\"loadMore\":\"Home_loadMore__QkFnl\"};"],"names":["_ref","alpha3Code","capital","flag","name","population","region","details","label","value","_jsxs","Link","to","concat","className","styles","children","_jsx","src","alt","loading","map","_ref2","INITIAL_PAGE","INITIAL_PAGE_SIZE","useInfiniteLoader","items","page","setPage","useState","totalPages","Math","ceil","length","onLoadMore","useCallback","prevPage","min","observeRef","callback","useRef","useEffect","current","observer","IntersectionObserver","entry","isIntersecting","root","rootMargin","threshold","observe","disconnect","useInView","slice","loadMoreRef","hasMoreItems","data","isLoading","useGetAllCountriesQuery","listData","setListData","filter","setFilter","filteredListData","country","includes","toLowerCase","onChangeFilter","key","event","target","state","_Fragment","toolbar","FormControl","fullWidth","search","OutlinedInput","type","startAdornment","InputAdornment","position","SearchIcon","endAdornment","searchClear","IconButton","onClick","clearSearch","onMouseDown","preventDefault","placeholder","onChange","InputLabel","id","Select","labelId","MenuItem","REGION_LIST","Skeleton","HomeCountryCards","cards","CountryCard","ref","loadMore","Array","keys","item","variant","width","height","CountryDetail","wrapper","content","style","marginBottom"],"sourceRoot":""}